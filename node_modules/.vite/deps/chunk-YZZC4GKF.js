import {
  GlobalStyles_default,
  _extends,
  defaultTheme_default,
  identifier_default,
  init_defaultTheme,
  init_esm2 as init_esm,
  init_extends,
  init_identifier,
  init_useThemeProps,
  require_jsx_runtime,
  require_prop_types,
  useThemeProps2 as useThemeProps
} from "./chunk-SOMC2MDU.js";
import {
  require_react
} from "./chunk-JFTBQ7A7.js";
import {
  __esm,
  __toESM
} from "./chunk-AC2VUBZ6.js";

// node_modules/@mui/material/GlobalStyles/GlobalStyles.js
function GlobalStyles(props) {
  return (0, import_jsx_runtime.jsx)(GlobalStyles_default, _extends({}, props, {
    defaultTheme: defaultTheme_default,
    themeId: identifier_default
  }));
}
var React, import_prop_types, import_jsx_runtime, GlobalStyles_default2;
var init_GlobalStyles = __esm({
  "node_modules/@mui/material/GlobalStyles/GlobalStyles.js"() {
    init_extends();
    React = __toESM(require_react());
    import_prop_types = __toESM(require_prop_types());
    init_esm();
    init_defaultTheme();
    init_identifier();
    import_jsx_runtime = __toESM(require_jsx_runtime());
    true ? GlobalStyles.propTypes = {
      // ----------------------------- Warning --------------------------------
      // | These PropTypes are generated from the TypeScript type definitions |
      // |     To update them edit the d.ts file and run "yarn proptypes"     |
      // ----------------------------------------------------------------------
      /**
       * The styles you want to apply globally.
       */
      styles: import_prop_types.default.oneOfType([import_prop_types.default.array, import_prop_types.default.func, import_prop_types.default.number, import_prop_types.default.object, import_prop_types.default.string, import_prop_types.default.bool])
    } : void 0;
    GlobalStyles_default2 = GlobalStyles;
  }
});

// node_modules/@mui/material/GlobalStyles/index.js
var init_GlobalStyles2 = __esm({
  "node_modules/@mui/material/GlobalStyles/index.js"() {
    init_GlobalStyles();
  }
});

// node_modules/@mui/material/CssBaseline/CssBaseline.js
function CssBaseline(inProps) {
  const props = useThemeProps({
    props: inProps,
    name: "MuiCssBaseline"
  });
  const {
    children,
    enableColorScheme = false
  } = props;
  return (0, import_jsx_runtime3.jsxs)(React2.Fragment, {
    children: [(0, import_jsx_runtime2.jsx)(GlobalStyles_default2, {
      styles: (theme) => styles(theme, enableColorScheme)
    }), children]
  });
}
var React2, import_prop_types2, import_jsx_runtime2, import_jsx_runtime3, html, body, styles, CssBaseline_default;
var init_CssBaseline = __esm({
  "node_modules/@mui/material/CssBaseline/CssBaseline.js"() {
    init_extends();
    React2 = __toESM(require_react());
    import_prop_types2 = __toESM(require_prop_types());
    init_useThemeProps();
    init_GlobalStyles2();
    import_jsx_runtime2 = __toESM(require_jsx_runtime());
    import_jsx_runtime3 = __toESM(require_jsx_runtime());
    html = (theme, enableColorScheme) => _extends({
      WebkitFontSmoothing: "antialiased",
      // Antialiasing.
      MozOsxFontSmoothing: "grayscale",
      // Antialiasing.
      // Change from `box-sizing: content-box` so that `width`
      // is not affected by `padding` or `border`.
      boxSizing: "border-box",
      // Fix font resize problem in iOS
      WebkitTextSizeAdjust: "100%"
    }, enableColorScheme && !theme.vars && {
      colorScheme: theme.palette.mode
    });
    body = (theme) => _extends({
      color: (theme.vars || theme).palette.text.primary
    }, theme.typography.body1, {
      backgroundColor: (theme.vars || theme).palette.background.default,
      "@media print": {
        // Save printer ink.
        backgroundColor: (theme.vars || theme).palette.common.white
      }
    });
    styles = (theme, enableColorScheme = false) => {
      var _theme$components, _theme$components$Mui;
      const colorSchemeStyles = {};
      if (enableColorScheme && theme.colorSchemes) {
        Object.entries(theme.colorSchemes).forEach(([key, scheme]) => {
          var _scheme$palette;
          colorSchemeStyles[theme.getColorSchemeSelector(key).replace(/\s*&/, "")] = {
            colorScheme: (_scheme$palette = scheme.palette) == null ? void 0 : _scheme$palette.mode
          };
        });
      }
      let defaultStyles = _extends({
        html: html(theme, enableColorScheme),
        "*, *::before, *::after": {
          boxSizing: "inherit"
        },
        "strong, b": {
          fontWeight: theme.typography.fontWeightBold
        },
        body: _extends({
          margin: 0
        }, body(theme), {
          // Add support for document.body.requestFullScreen().
          // Other elements, if background transparent, are not supported.
          "&::backdrop": {
            backgroundColor: (theme.vars || theme).palette.background.default
          }
        })
      }, colorSchemeStyles);
      const themeOverrides = (_theme$components = theme.components) == null ? void 0 : (_theme$components$Mui = _theme$components.MuiCssBaseline) == null ? void 0 : _theme$components$Mui.styleOverrides;
      if (themeOverrides) {
        defaultStyles = [defaultStyles, themeOverrides];
      }
      return defaultStyles;
    };
    true ? CssBaseline.propTypes = {
      // ----------------------------- Warning --------------------------------
      // | These PropTypes are generated from the TypeScript type definitions |
      // |     To update them edit the d.ts file and run "yarn proptypes"     |
      // ----------------------------------------------------------------------
      /**
       * You can wrap a node.
       */
      children: import_prop_types2.default.node,
      /**
       * Enable `color-scheme` CSS property to use `theme.palette.mode`.
       * For more details, check out https://developer.mozilla.org/en-US/docs/Web/CSS/color-scheme
       * For browser support, check out https://caniuse.com/?search=color-scheme
       * @default false
       */
      enableColorScheme: import_prop_types2.default.bool
    } : void 0;
    CssBaseline_default = CssBaseline;
  }
});

// node_modules/@mui/material/CssBaseline/index.js
var init_CssBaseline2 = __esm({
  "node_modules/@mui/material/CssBaseline/index.js"() {
    init_CssBaseline();
  }
});

export {
  GlobalStyles_default2 as GlobalStyles_default,
  init_GlobalStyles2 as init_GlobalStyles,
  html,
  body,
  CssBaseline_default,
  init_CssBaseline,
  init_CssBaseline2
};
//# sourceMappingURL=chunk-YZZC4GKF.js.map
